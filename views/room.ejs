
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dhomë: <%= room %></title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
<div class="container mt-5">
    <h1 class="text-center">Dhomë: <%= room %></h1>
    <div id="messages" class="mb-4" style="height: 300px; overflow-y: scroll; border: 1px solid #ccc; padding: 10px;"></div>
    <form id="messageForm">
        <input type="text" id="messageInput" class="form-control" placeholder="Shkruaj një mesazh...">
        <button type="submit" class="btn btn-primary mt-2">Dërgo</button>
    </form>
    <form id="uploadForm" class="mt-3">
        <input type="file" id="fileInput" name="file" class="form-control">
        <button type="submit" class="btn btn-secondary mt-2">Ngarko Foto</button>
    </form>
</div>
<script src="/socket.io/socket.io.js"></script>
<script>
    const socket = io();
    const room = "<%= room %>";
    const messagesDiv = document.getElementById('messages');
    const messageForm = document.getElementById('messageForm');
    const messageInput = document.getElementById('messageInput');
    const uploadForm = document.getElementById('uploadForm');
    const fileInput = document.getElementById('fileInput');

    socket.emit('join-room', room);

    messageForm.addEventListener('submit', (e) => {
        e.preventDefault();
        const message = messageInput.value;
        socket.emit('chat-message', { room, message });
        messageInput.value = '';
    });

    socket.on('chat-message', (message) => {
        const messageElement = document.createElement('div');
        messageElement.textContent = message;
        messagesDiv.appendChild(messageElement);
    });

    uploadForm.addEventListener('submit', (e) => {
        e.preventDefault();
        const file = fileInput.files[0];
        const reader = new FileReader();

        reader.onload = () => {
            const imageData = reader.result;
            socket.emit('image-upload', { room, imageData });
        };

        if (file) {
            reader.readAsDataURL(file); // Lexo skedarin si base64
        }
    });

    socket.on('image-upload', (imageData) => {
        const imgElement = document.createElement('img');
        imgElement.src = imageData;
        imgElement.style.maxWidth = '100%';
        messagesDiv.appendChild(imgElement);
    });
</script>


</body>
</html>
